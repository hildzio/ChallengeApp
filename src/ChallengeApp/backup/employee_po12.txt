using System.Collections.Generic;
using System;

namespace ChallengeApp
{
    public class Employee
    {
        public string name;
        private List<double> grades = new List<double>();
        private List<string> names = new List<string>();
        private string[] users = new string[] { "Adam", "Stefan", "Antoni", "Tomek", "Krystian", "Leszek", "Marek", "Paweł", "Piotr", "Szymon" };
        private int[] age = new int[] { 23, 34, 32, 22, 26, 60, 53, 49, 36, 70 };

        public void PairLists()
        {
            var i = 0;
            for (i = 0; i < users.Length; i++)
            {
                Console.WriteLine(users[i] + " " + age[i]);
            }
        }
        public Employee(string name)
        {
            this.name = name;
            this.grades = new List<double>();
        }
        public void AddGrade(double grade)
        {
            if (grade >= 0 && grade <= 100)
            {
                this.grades.Add(grade);
            }
            else
            {
                throw new Exception("Invalid value.");
                throw new ArgumentException($"Invalid argument: {nameof(grade)}");
                // Console.WriteLine("Invalid value.");
            }
        }
       public void AddGrade(char grade)
        {
            switch (grade)
            {
                case 'A':
                    this.AddGrade(100);
                    break;
                case 'B':
                    this.AddGrade(80);
                    break;
                case 'C':
                    this.AddGrade(60);
                    break;
                case 'D':
                    this.AddGrade(40);
                    break;
                case 'E':
                    this.AddGrade(20);
                    break;
                default:
                    this.AddGrade(0);
                    break;
            }
            /* if (grade == 'A')
             {
                 this.AddGrade(100);
             }
             else if (grade == 'B')
             {
                 this.AddGrade(80);
             }
             else if (grade == 'C')
             {
                 this.AddGrade(60);
             }
             else if (grade == 'E')
             {
                 this.AddGrade(40);
             }
             else if (grade == 'F')
             {
                 this.AddGrade(20);
             }
             else
             {
                 this.AddGrade(0);
             }*/
        }
        public void AddGrade(string gradeName)
        {
            double grade;
            Double.TryParse(gradeName, out grade);

            if (!Double.IsNaN(grade) && grade != 0)
            {
                this.grades.Add(grade);
                Console.WriteLine($"Dodano do listy ocen : " + grade);
            }
            else
            {
                Console.WriteLine("Błąd ! Nie można przekonwertować zmiennej na docelową ocenę");
            }
        }
        public void AddGradePlus(string grade)
        {
            int plus = 0;
            int minus = 0;

            if (grade.Contains("+"))
            {
                plus = 1;
            }
            else if (grade.Contains("-"))
            {
                minus = 1;
            }
            var gradeEmpty = grade.Replace("+", String.Empty).Replace("-", String.Empty);
            Console.WriteLine($"gradeempty to " + gradeEmpty);
            var gradeDouble = double.Parse(gradeEmpty);
            Console.WriteLine($"gradeDouble to " + gradeDouble);
            Console.WriteLine($"grade to " + grade);
            Console.WriteLine($"grade[0] " + grade[0]);
            Console.WriteLine($"grade[1] " + grade[1]);

            if (/*grade.Length == 2 && char.IsDigit(grade[0]) && */gradeDouble >= 1 && gradeDouble <= 6 /*&& grade.Contains("+") || grade.Contains("-")*/)
            {
                /*if (grade.Contains("+"))
                {
                    gradeDouble += 0.5;
                    AddGrade(gradeDouble);
                    Console.WriteLine($"Dodano ocenę z + w metodzie " + gradeDouble);
                }
                else if (grade.Contains("-"))
                {
                    gradeDouble -= 0.25;
                    AddGrade(gradeDouble);
                    Console.WriteLine($"Dodano ocenę z - w metodzie " + gradeDouble);
                }*/
                switch (grade[1])
                {
                    case '+':
                        gradeDouble += 0.5;
                        AddGrade(gradeDouble);
                        Console.WriteLine($"Dodano ocenę w metodzie " + gradeDouble);
                        break;
                    case '-':
                        gradeDouble -= 0.25;
                        AddGrade(gradeDouble);
                        Console.WriteLine($"Dodano ocenę w metodzie " + gradeDouble);
                        break;
                }
            }
            else if (grade.Length == 1 && char.IsDigit(grade[0]) && gradeDouble >= 1 && gradeDouble <= 6')
            {
                AddGrade(grade);
                Console.WriteLine($"Dodano ocenę bez +/- w metodzie " + grade);
            }
            else
            {
                Console.WriteLine("Wprowadź poprawny format oceny. Wprowadzona ocena nie składa się z cyfry lub z cyfry z + lub - . Spróbuj jeszcze raz.");
            }
        }

        /*if (grade.Length == 2 && char.IsDigit(grade[0]) && grade[0] >= 1 && grade[0] <= 6 && grade[1] == '+' || grade[1] == '-')
        {
            switch (grade)
            {
                //var grade = double.Parse(grade[0]);
                case var d when d[0] > '1' && d[0] < '6' && d[1] == '+':
                    //var grade = double.Parse(grade);
                    Console.WriteLine($"pierwszy znak" + grade);
                    //Console.WriteLine($"drugi znak" + grade[1]);
                    grade += 0.5;
                    AddGrade(grade);
                    Console.WriteLine($"Dodano ocenę " + grade);
                    break;

                case var d when d[0] == '1' && d[1] == '-':
                    //var grade = double.Parse(grade);
                    // Console.WriteLine($"pierwszy znak" + grade[0]);
                    Console.WriteLine($"drugi znak" + grade);
                    grade -= 0.25;
                    AddGrade(grade);
                    Console.WriteLine($"Dodano ocenę " + grade);
                    break;
            }
            //Double.TryParse(grade, out one);
        }
        else
        {
            Console.WriteLine("Wprowadź poprawny format oceny. Spróbuj jeszcze raz.");
        }
    }*/

        /**/
        /* public void ChangeName(string newName)
         {
             bool digitInName = false;
             foreach (var sign in newName)
             {
                 if (char.IsDigit(sign))
                 {
                     digitInName = true;
                     break;
                 }
             }

             if (digitInName)
             {
                 Console.WriteLine("Nowe imię nie może zawierać cyfr. Podaj nowe imię złożone z liter.");
             }
             else
             {
                 this.name = newName;
                 Console.WriteLine($"Imię zostało zmienione na " + newName);
             }
         }*/

        //public int MyProperty
        public string Name
        {
            get
            {
                return this.name;
            }
        }
        public Statistics GetStatistics()
        {
            var result = new Statistics();
            result.Average = 0.0;
            result.High = double.MinValue;
            result.Low = double.MaxValue;
            /*foreach (var grade in grades)
            {
                result.Low = Math.Min(grade, result.Low);
                result.High = Math.Max(grade, result.High);
                result.Average += grade;
            }
            var index=0;
            do
            {
                result.Low = Math.Min(grades[index], result.Low);
                result.High = Math.Max(grades[index], result.High);
                result.Average += grades[index];
                index++;
            }
            while(index < grades.Count);*/

            for (var index = 0; index < grades.Count; index++)
            {
                /*if (grades[index] == 5)
                 {
                     //brake;
                     //continue;
                     //goto here; //nie stosowac
                 }
                     // here:*/
                result.Low = Math.Min(grades[index], result.Low);
                result.High = Math.Max(grades[index], result.High);
                result.Average += grades[index];
                // index++;
            };
            result.Average /= grades.Count;

            /*switch (result.Average)
            {
                case var d when d > 80:
                    result.Letter = 'A';
                    break;

                case var d when d > 60:
                    result.Letter = 'B';
                    break;

                case var d when d > 40:
                    result.Letter = 'C';
                    break;

                case var d when d > 20:
                    result.Letter = 'D';
                    break;

                default:
                    result.Letter = 'Z';
                    break;
            }*/
            return result;
        }
    }
}